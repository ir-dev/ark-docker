> cd C:\Immi\Sample\python-report\rep-2-wsl

set up env
> python -m venv wsl_env

activate the venv
> wsl_env\Scripts\activate

activate even on ubuntu
> source wsl_env/bin/activate

pip install from requirement.txt
> pip install -r requirements.txt

> python app.py

-- wheel setup
> pip install wheel
> mkdir wheelhouse
> pip wheel -r requirements.txt --wheel-dir ./wheelhouse

-------- setup deployment on ubuntu server

nginx setup:
> sudo apt install nginx -y

app setup:
> python -m venv wsl_env
> wsl_env\Scripts\activate
> pip install --upgrade pip
> pip install Flask gunicorn
> pip install -r requirements.txt
> gunicorn --workers 4 --bind 0.0.0.0:8000 wsgi:application

deamon systemd setup
- copy "ntt-is-py-report.service" to "/etc/systemd/system" using winscp
- repload deamon service
> sudo systemctl daemon-reload # Reload systemd to recognize the new service
> sudo systemctl start ntt-is-py-report
> sudo systemctl enable ntt-is-py-report # Enable to start on boot
> sudo systemctl status ntt-is-py-report

> journalctl -u ntt-is-py-report.service

below setup in nginx

	location /py/reports/ {
        	include proxy_params;
        	# Proxy the requests to the Gunicorn process listening on localhost:8000
        	proxy_pass http://unix:/home/iraj/ntt-cad-is-py-reports/ntt-is-py-report.sock:/;
		# proxy_pass http://localhost:8000;
    	}

--docker

> docker build -t ark-plotly-app:latest .
> docker run -d -p 80:8000 --name plotly-service ark-plotly-app:latest

push to docker hub
> docker tag ark-plotly-app:latest immanuelraj/ark-plotly-app:latest
> docker push immanuelraj/ark-plotly-app:latest